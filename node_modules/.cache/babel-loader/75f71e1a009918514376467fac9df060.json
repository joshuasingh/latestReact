{"ast":null,"code":"import _classCallCheck from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\src\\\\components\\\\Menu.js\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Heading from \"../components/Heading\";\nimport ExpandedView from \"../components/ExpandedView\";\nimport { thisTypeAnnotation } from \"@babel/types\";\nimport Slideshow from \"../components/Carou\";\nimport { Link } from \"react-router-dom\";\n\nvar menu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(menu, _React$Component);\n\n  //this array is used to store only the needed info for vertical menu\n  function menu(props) {\n    var _this;\n\n    _classCallCheck(this, menu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(menu).call(this, props)); //storing ref of menu item\n\n    _this.finalArray = [];\n    _this.referring = [];\n    _this.state = {\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(menu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"attr set\");\n      this.setState({\n        count: 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dt = this.props.data;\n      console.log(\"thie  mainpage \", dt); //populating only relevent data in array\n\n      if (this.finalArray.length === 0) {\n        dt.map(function (item, index) {\n          if (item.title !== \"mainPageSlider\" && item.title !== \"NavBarDetials\") {\n            _this2.finalArray[index] = item;\n          }\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"row \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.finalArray.map(function (item, key) {\n        console.log(\"getting url info\", item);\n        var art = \"/details/\".concat(\"\".concat(item.title));\n        return (// <a href=\"https://picsum.photos/200/200\" key={key}>\n          React.createElement(\"div\", {\n            className: \"col-md-4 mb-5\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: art,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card h-100 cardhome\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-body\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"card-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, item.title)))))\n        );\n      })));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.itemnum = this.props.data.length;\n    }\n  }]);\n\n  return menu;\n}(React.Component);\n\nexport default menu;","map":{"version":3,"sources":["D:/towards Future/project1/React client/latestReact/src/components/Menu.js"],"names":["React","useState","useEffect","Heading","ExpandedView","thisTypeAnnotation","Slideshow","Link","menu","props","finalArray","referring","state","count","console","log","setState","dt","data","length","map","item","index","title","key","art","concat","itemnum","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,kBAAT,QAAmC,cAAnC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,I;;;;;AACJ;AAGA,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN,GADiB,CAGjB;;AAHiB,UAFnBC,UAEmB,GAFN,EAEM;AAIjB,UAAKC,SAAL,GAAiB,EAAjB;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AANiB;AASlB;;;;wCAEmB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE;AADK,OAAd;AAGD;;;6BAEQ;AAAA;;AACP,UAAMI,EAAE,GAAG,KAAKR,KAAL,CAAWS,IAAtB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,EAA/B,EAFO,CAIP;;AACA,UAAI,KAAKP,UAAL,CAAgBS,MAAhB,KAA2B,CAA/B,EAAkC;AAChCF,QAAAA,EAAE,CAACG,GAAH,CAAO,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACtB,cAAID,IAAI,CAACE,KAAL,KAAe,gBAAf,IAAmCF,IAAI,CAACE,KAAL,KAAe,eAAtD,EAAuE;AACrE,YAAA,MAAI,CAACb,UAAL,CAAgBY,KAAhB,IAAyBD,IAAzB;AACD;AACF,SAJD;AAKD;;AAED,aACE,0CACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKX,UAAL,CAAgBU,GAAhB,CAAoB,UAACC,IAAD,EAAOG,GAAP,EAAe;AAClCV,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCM,IAAhC;AACA,YAAII,GAAG,GAAG,YAAYC,MAAZ,WAAsBL,IAAI,CAACE,KAA3B,EAAV;AACA,eACE;AAEA;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,EAAE,EAAEE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0BJ,IAAI,CAACE,KAA/B,CADF,CADF,CADF,CADF;AAHF;AAaD,OAhBA,CADH,CADF,CADF;AAuBD;;;yCAEoB;AACnB,WAAKI,OAAL,GAAe,KAAKlB,KAAL,CAAWS,IAAX,CAAgBC,MAA/B;AACD;;;;EA9DgBnB,KAAK,CAAC4B,S;;AAiEzB,eAAepB,IAAf","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Heading from \"../components/Heading\";\r\nimport ExpandedView from \"../components/ExpandedView\";\r\nimport { thisTypeAnnotation } from \"@babel/types\";\r\nimport Slideshow from \"../components/Carou\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass menu extends React.Component {\r\n  //this array is used to store only the needed info for vertical menu\r\n  finalArray = [];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //storing ref of menu item\r\n    this.referring = [];\r\n\r\n    this.state = {\r\n      count: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"attr set\");\r\n    this.setState({\r\n      count: 0\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const dt = this.props.data;\r\n    console.log(\"thie  mainpage \", dt);\r\n\r\n    //populating only relevent data in array\r\n    if (this.finalArray.length === 0) {\r\n      dt.map((item, index) => {\r\n        if (item.title !== \"mainPageSlider\" && item.title !== \"NavBarDetials\") {\r\n          this.finalArray[index] = item;\r\n        }\r\n      });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"row \">\r\n          {this.finalArray.map((item, key) => {\r\n            console.log(\"getting url info\", item);\r\n            let art = \"/details/\".concat(`${item.title}`);\r\n            return (\r\n              // <a href=\"https://picsum.photos/200/200\" key={key}>\r\n\r\n              <div className=\"col-md-4 mb-5\">\r\n                <Link to={art}>\r\n                  <div className=\"card h-100 cardhome\">\r\n                    <div className=\"card-body\">\r\n                      <p className=\"card-text\">{item.title}</p>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.itemnum = this.props.data.length;\r\n  }\r\n}\r\n\r\nexport default menu;\r\n"]},"metadata":{},"sourceType":"module"}