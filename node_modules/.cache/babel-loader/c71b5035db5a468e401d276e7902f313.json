{"ast":null,"code":"var ShowExpandedImage = function ShowExpandedImage() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    allTabRef: null\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ExpandedImageInitiate\":\n      //this is called from when details load again\n      if (state.allTabRef === null || state.allTabRef.length !== action.payload) {\n        var temp = [];\n        console.log(\"in expanded image reducer\", action.payload); //no of rows in vertical tabs\n\n        var count = action.payload;\n\n        for (var i = 0; i < count; i++) {\n          temp[i] = {\n            status: -1,\n            currentUrl: \"\",\n            currentCaption: \"\"\n          };\n        }\n\n        state = {\n          allTabRef: temp\n        };\n      }\n\n      break;\n\n    case \"setImageStatus\":\n      console.log(\"image status is set....\");\n      var index = action.payload.index;\n      var url = action.payload.url;\n      var caption = action.payload.caption;\n      var temp = state.allTabRef;\n      temp[index] = {\n        status: 0,\n        currentUrl: url,\n        currentCaption: caption\n      };\n      state = {\n        allTabRef: temp\n      };\n      break;\n\n    case \"resetEnlargedImage\":\n      console.log(\"in reset Enlarged image\");\n      var temp = state.allTabRef;\n      temp[action.payload.index] = {\n        status: -1,\n        currentUrl: \"\",\n        currentCaption: \"\"\n      };\n      state = {\n        allTabRef: temp\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default ShowExpandedImage;","map":{"version":3,"sources":["D:/towards Future/project1/React client/latestReact/src/allReducer/ElabContainer/ShowExpandedImage.js"],"names":["ShowExpandedImage","state","allTabRef","action","type","length","payload","temp","console","log","count","i","status","currentUrl","currentCaption","index","url","caption"],"mappings":"AAAA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,GAKrB;AAAA,MAJHC,KAIG,uEAJK;AACNC,IAAAA,SAAS,EAAE;AADL,GAIL;AAAA,MADHC,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,uBAAL;AACE;AACA,UACEH,KAAK,CAACC,SAAN,KAAoB,IAApB,IACAD,KAAK,CAACC,SAAN,CAAgBG,MAAhB,KAA2BF,MAAM,CAACG,OAFpC,EAGE;AACA,YAAIC,IAAI,GAAG,EAAX;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCN,MAAM,CAACG,OAAhD,EAHA,CAIA;;AACA,YAAII,KAAK,GAAGP,MAAM,CAACG,OAAnB;;AAEA,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;AAC9BJ,UAAAA,IAAI,CAACI,CAAD,CAAJ,GAAU;AAAEC,YAAAA,MAAM,EAAE,CAAC,CAAX;AAAcC,YAAAA,UAAU,EAAE,EAA1B;AAA8BC,YAAAA,cAAc,EAAE;AAA9C,WAAV;AACD;;AACDb,QAAAA,KAAK,GAAG;AAAEC,UAAAA,SAAS,EAAEK;AAAb,SAAR;AACD;;AACD;;AACF,SAAK,gBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,UAAIM,KAAK,GAAGZ,MAAM,CAACG,OAAP,CAAeS,KAA3B;AACA,UAAIC,GAAG,GAAGb,MAAM,CAACG,OAAP,CAAeU,GAAzB;AACA,UAAIC,OAAO,GAAGd,MAAM,CAACG,OAAP,CAAeW,OAA7B;AAEA,UAAIV,IAAI,GAAGN,KAAK,CAACC,SAAjB;AACAK,MAAAA,IAAI,CAACQ,KAAD,CAAJ,GAAc;AAAEH,QAAAA,MAAM,EAAE,CAAV;AAAaC,QAAAA,UAAU,EAAEG,GAAzB;AAA8BF,QAAAA,cAAc,EAAEG;AAA9C,OAAd;AACAhB,MAAAA,KAAK,GAAG;AAAEC,QAAAA,SAAS,EAAEK;AAAb,OAAR;AACA;;AACF,SAAK,oBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,UAAIF,IAAI,GAAGN,KAAK,CAACC,SAAjB;AACAK,MAAAA,IAAI,CAACJ,MAAM,CAACG,OAAP,CAAeS,KAAhB,CAAJ,GAA6B;AAC3BH,QAAAA,MAAM,EAAE,CAAC,CADkB;AAE3BC,QAAAA,UAAU,EAAE,EAFe;AAG3BC,QAAAA,cAAc,EAAE;AAHW,OAA7B;AAKAb,MAAAA,KAAK,GAAG;AAAEC,QAAAA,SAAS,EAAEK;AAAb,OAAR;AACA;;AACF;AACE;AAxCJ;;AA0CA,SAAON,KAAP;AACD,CAjDD;;AAmDA,eAAeD,iBAAf","sourcesContent":["const ShowExpandedImage = (\r\n  state = {\r\n    allTabRef: null\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"ExpandedImageInitiate\":\r\n      //this is called from when details load again\r\n      if (\r\n        state.allTabRef === null ||\r\n        state.allTabRef.length !== action.payload\r\n      ) {\r\n        var temp = [];\r\n\r\n        console.log(\"in expanded image reducer\", action.payload);\r\n        //no of rows in vertical tabs\r\n        var count = action.payload;\r\n\r\n        for (var i = 0; i < count; i++) {\r\n          temp[i] = { status: -1, currentUrl: \"\", currentCaption: \"\" };\r\n        }\r\n        state = { allTabRef: temp };\r\n      }\r\n      break;\r\n    case \"setImageStatus\":\r\n      console.log(\"image status is set....\");\r\n      var index = action.payload.index;\r\n      var url = action.payload.url;\r\n      var caption = action.payload.caption;\r\n\r\n      var temp = state.allTabRef;\r\n      temp[index] = { status: 0, currentUrl: url, currentCaption: caption };\r\n      state = { allTabRef: temp };\r\n      break;\r\n    case \"resetEnlargedImage\":\r\n      console.log(\"in reset Enlarged image\");\r\n      var temp = state.allTabRef;\r\n      temp[action.payload.index] = {\r\n        status: -1,\r\n        currentUrl: \"\",\r\n        currentCaption: \"\"\r\n      };\r\n      state = { allTabRef: temp };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default ShowExpandedImage;\r\n"]},"metadata":{},"sourceType":"module"}