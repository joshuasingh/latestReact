{"ast":null,"code":"import _classCallCheck from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\src\\\\components\\\\AdminComponents\\\\AdminImageCategoryWise\\\\ImageCategoryWise.js\";\nimport React from \"react\";\nimport { allMenuData } from \"../AdminImageCategoryWise/allMenuData\";\nimport { editImagesMenu } from \"../AdminImageCategoryWise/EditImagesMenu\";\nimport AddingImageAndCaption from \"../AdminImageCategoryWise/AddingImageAndCaption\";\nimport { connect } from \"react-redux\";\n\nvar ImageCategoryWise =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageCategoryWise, _React$Component);\n\n  function ImageCategoryWise(props) {\n    var _this;\n\n    _classCallCheck(this, ImageCategoryWise);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageCategoryWise).call(this, props));\n    _this.popRef = null;\n    _this.getPopPermission = _this.getPopPermission.bind(_assertThisInitialized(_this));\n    _this.setPopUpRef = _this.setPopUpRef.bind(_assertThisInitialized(_this));\n    _this.getBackToMain = _this.getBackToMain.bind(_assertThisInitialized(_this));\n    _this.backPresses = _this.backPresses.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ImageCategoryWise, [{\n    key: \"setPopUpRef\",\n    value: function setPopUpRef(ree) {\n      console.log(\"getting popup ref\");\n      this.popRef = ree;\n    } //when submit buttonis clicked on upload screen\n\n  }, {\n    key: \"getBackToMain\",\n    value: function getBackToMain(updatedVal) {\n      this.setState({\n        selectedData: updatedVal[0]._id,\n        showImgMenu: 1,\n        showAll: 0,\n        showAddingImage: 0\n      });\n    } //when back button is pressed on uploading images screen\n\n  }, {\n    key: \"backPresses\",\n    value: function backPresses() {\n      //this.props.getToShowAll();\n      this.setState({\n        showImgMenu: 1,\n        showAll: 0,\n        showAddingImage: 0\n      });\n    }\n  }, {\n    key: \"getPopPermission\",\n    value: function getPopPermission() {\n      this.popRef.style.display = \"block\";\n    } //close popUp View\n\n  }, {\n    key: \"closeForm\",\n    value: function closeForm(caption) {\n      this.popRef.style.display = \"none\";\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(\"update from details called\", this.props.fromAddingImage.showImgMenu);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.initialize({\n        allData: this.props.user1.mainData\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"in image Category wise\", this.props.fromAddingImage.showImgMenu, \"----- \", this.props.user1.mainData);\n      return React.createElement(React.Fragment, null, this.props.fromAddingImage.showAll === 1 ? allMenuData(this.props.user1.mainData, this) : \" \", this.props.fromAddingImage.showImgMenu === 1 ? editImagesMenu(this) : \" \", this.props.fromAddingImage.showAddingImage === 1 ? React.createElement(AddingImageAndCaption, {\n        selectedImages: this.props.fromAddingImage.selectedFile,\n        selectedData_id: this.props.fromAddingImage.selectedData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }) : \" \");\n    }\n  }]);\n\n  return ImageCategoryWise;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user1: state.AdminDetailView,\n    fromAddingImage: state.addingImageRed\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setUserInfo: function setUserInfo(name) {\n      dispatch({\n        type: \"update\",\n        payload: name\n      });\n    },\n    initialize: function initialize(name) {\n      dispatch({\n        type: \"initializeIt\",\n        payload: name\n      });\n    },\n    AfterUpload: function AfterUpload(value) {\n      dispatch({\n        type: \"getBackToEditMenu\",\n        payload: value\n      });\n    },\n    getToShowAll: function getToShowAll(value) {\n      dispatch({\n        type: \"getBackToShowAll\",\n        payload: value\n      });\n    },\n    getToEditMenu: function getToEditMenu(value) {\n      dispatch({\n        type: \"goToEditMenu\",\n        payload: value\n      });\n    },\n    addingImagesScreen: function addingImagesScreen(value) {\n      dispatch({\n        type: \"addingImagesScreen\",\n        payload: value\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageCategoryWise);","map":{"version":3,"sources":["D:/towards Future/project1/React client/latestReact/src/components/AdminComponents/AdminImageCategoryWise/ImageCategoryWise.js"],"names":["React","allMenuData","editImagesMenu","AddingImageAndCaption","connect","ImageCategoryWise","props","popRef","getPopPermission","bind","setPopUpRef","getBackToMain","backPresses","ree","console","log","updatedVal","setState","selectedData","_id","showImgMenu","showAll","showAddingImage","style","display","caption","fromAddingImage","initialize","allData","user1","mainData","selectedFile","Component","mapStateToProps","state","AdminDetailView","addingImageRed","mapDispatchToProps","dispatch","setUserInfo","name","type","payload","AfterUpload","value","getToShowAll","getToEditMenu","addingImagesScreen"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { allMenuData } from \"../AdminImageCategoryWise/allMenuData\";\r\nimport { editImagesMenu } from \"../AdminImageCategoryWise/EditImagesMenu\";\r\nimport AddingImageAndCaption from \"../AdminImageCategoryWise/AddingImageAndCaption\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ImageCategoryWise extends React.Component {\r\n  popRef = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getPopPermission = this.getPopPermission.bind(this);\r\n    this.setPopUpRef = this.setPopUpRef.bind(this);\r\n    this.getBackToMain = this.getBackToMain.bind(this);\r\n    this.backPresses = this.backPresses.bind(this);\r\n  }\r\n\r\n  setPopUpRef(ree) {\r\n    console.log(\"getting popup ref\");\r\n    this.popRef = ree;\r\n  }\r\n\r\n  //when submit buttonis clicked on upload screen\r\n  getBackToMain(updatedVal) {\r\n    this.setState({\r\n      selectedData: updatedVal[0]._id,\r\n      showImgMenu: 1,\r\n      showAll: 0,\r\n      showAddingImage: 0\r\n    });\r\n  }\r\n\r\n  //when back button is pressed on uploading images screen\r\n  backPresses() {\r\n    //this.props.getToShowAll();\r\n\r\n    this.setState({\r\n      showImgMenu: 1,\r\n      showAll: 0,\r\n      showAddingImage: 0\r\n    });\r\n  }\r\n\r\n  getPopPermission() {\r\n    this.popRef.style.display = \"block\";\r\n  }\r\n\r\n  //close popUp View\r\n  closeForm(caption) {\r\n    this.popRef.style.display = \"none\";\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\r\n      \"update from details called\",\r\n      this.props.fromAddingImage.showImgMenu\r\n    );\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.initialize({\r\n      allData: this.props.user1.mainData\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log(\r\n      \"in image Category wise\",\r\n      this.props.fromAddingImage.showImgMenu,\r\n      \"----- \",\r\n      this.props.user1.mainData\r\n    );\r\n    return (\r\n      <>\r\n        {this.props.fromAddingImage.showAll === 1\r\n          ? allMenuData(this.props.user1.mainData, this)\r\n          : \" \"}\r\n        {this.props.fromAddingImage.showImgMenu === 1\r\n          ? editImagesMenu(this)\r\n          : \" \"}\r\n        {this.props.fromAddingImage.showAddingImage === 1 ? (\r\n          <AddingImageAndCaption\r\n            selectedImages={this.props.fromAddingImage.selectedFile}\r\n            selectedData_id={this.props.fromAddingImage.selectedData}\r\n          />\r\n        ) : (\r\n          \" \"\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user1: state.AdminDetailView,\r\n    fromAddingImage: state.addingImageRed\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setUserInfo: name => {\r\n      dispatch({\r\n        type: \"update\",\r\n        payload: name\r\n      });\r\n    },\r\n    initialize: name => {\r\n      dispatch({\r\n        type: \"initializeIt\",\r\n        payload: name\r\n      });\r\n    },\r\n    AfterUpload: value => {\r\n      dispatch({\r\n        type: \"getBackToEditMenu\",\r\n        payload: value\r\n      });\r\n    },\r\n    getToShowAll: value => {\r\n      dispatch({\r\n        type: \"getBackToShowAll\",\r\n        payload: value\r\n      });\r\n    },\r\n    getToEditMenu: value => {\r\n      dispatch({\r\n        type: \"goToEditMenu\",\r\n        payload: value\r\n      });\r\n    },\r\n    addingImagesScreen: value => {\r\n      dispatch({\r\n        type: \"addingImagesScreen\",\r\n        payload: value\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ImageCategoryWise);\r\n"]},"metadata":{},"sourceType":"module"}