{"ast":null,"code":"export default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    selected: -1,\n    previous: -1\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"switchTab\":\n      if (state.selected === state.previous && state.previous === -1) {\n        state = {\n          selected: action.payload,\n          previous: -1\n        };\n      } else {\n        state = {\n          selected: action.payload,\n          previous: state.selected\n        };\n      }\n\n      break;\n\n    case \"closeTabSelectedOne\":\n      var tempArray = action.payload.array1;\n      var lastClicked = action.payload.current; // if the tab being removed is the last\n\n      if (lastClicked === -1) {\n        if (tempArray.length === 1) {\n          state = {\n            previous: -1,\n            selected: -1\n          };\n        } //no need to change the state\n\n      } else {\n        state = {\n          selected: lastClicked,\n          previous: state.selected\n        };\n      }\n\n      break;\n\n    case \"closeTabUnselectedOne\":\n      var tempArray = action.payload.array1;\n      var lastClicked = action.payload.current; //if the tab being removed is at right of the selected one than we don't have to change any states.\n\n      if (lastClicked >= state.selected) {} ///do nothing\n      //if the tab being removed is at left of the selected one.\n      else {\n          state = {\n            selected: state.selected - 1,\n            previous: state.selected\n          };\n        }\n\n      break;\n\n    case \"logoutForUpperMenu\":\n      state = {\n        selected: -1,\n        previous: -1\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["D:/towards Future/project1/React client/latestReact/src/allReducer/adminUpperMenu.js"],"names":["state","selected","previous","action","type","payload","tempArray","array1","lastClicked","current","length"],"mappings":"AAAA,gBAAe,YAAoD;AAAA,MAAnDA,KAAmD,uEAA3C;AAAEC,IAAAA,QAAQ,EAAE,CAAC,CAAb;AAAgBC,IAAAA,QAAQ,EAAE,CAAC;AAA3B,GAA2C;AAAA,MAAXC,MAAW;;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AAEE,UAAIJ,KAAK,CAACC,QAAN,KAAmBD,KAAK,CAACE,QAAzB,IAAqCF,KAAK,CAACE,QAAN,KAAmB,CAAC,CAA7D,EAAgE;AAC9DF,QAAAA,KAAK,GAAG;AACNC,UAAAA,QAAQ,EAAEE,MAAM,CAACE,OADX;AAENH,UAAAA,QAAQ,EAAE,CAAC;AAFL,SAAR;AAID,OALD,MAKO;AACLF,QAAAA,KAAK,GAAG;AACNC,UAAAA,QAAQ,EAAEE,MAAM,CAACE,OADX;AAENH,UAAAA,QAAQ,EAAEF,KAAK,CAACC;AAFV,SAAR;AAID;;AAED;;AACF,SAAK,qBAAL;AACE,UAAIK,SAAS,GAAGH,MAAM,CAACE,OAAP,CAAeE,MAA/B;AACA,UAAIC,WAAW,GAAGL,MAAM,CAACE,OAAP,CAAeI,OAAjC,CAFF,CAKE;;AACA,UAAID,WAAW,KAAK,CAAC,CAArB,EAAwB;AACtB,YAAIF,SAAS,CAACI,MAAV,KAAqB,CAAzB,EAA4B;AAC1BV,UAAAA,KAAK,GAAG;AACNE,YAAAA,QAAQ,EAAE,CAAC,CADL;AAEND,YAAAA,QAAQ,EAAE,CAAC;AAFL,WAAR;AAID,SANqB,CAOtB;;AACD,OARD,MAQO;AACLD,QAAAA,KAAK,GAAG;AACNC,UAAAA,QAAQ,EAAEO,WADJ;AAENN,UAAAA,QAAQ,EAAEF,KAAK,CAACC;AAFV,SAAR;AAID;;AAED;;AACF,SAAK,uBAAL;AACE,UAAIK,SAAS,GAAGH,MAAM,CAACE,OAAP,CAAeE,MAA/B;AACA,UAAIC,WAAW,GAAGL,MAAM,CAACE,OAAP,CAAeI,OAAjC,CAFF,CAKE;;AACA,UAAID,WAAW,IAAIR,KAAK,CAACC,QAAzB,EAAmC,CAElC,CAFD,CACE;AACA;AAFF,WAGK;AACHD,UAAAA,KAAK,GAAG;AACNC,YAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,GAAiB,CADrB;AAENC,YAAAA,QAAQ,EAAEF,KAAK,CAACC;AAFV,WAAR;AAID;;AAED;;AACC,SAAK,oBAAL;AACID,MAAAA,KAAK,GAAG;AACTC,QAAAA,QAAQ,EAAC,CAAC,CADD;AAETC,QAAAA,QAAQ,EAAE,CAAC;AAFF,OAAR;AAIA;;AACP;AACE;AA9DJ;;AAgEA,SAAOF,KAAP;AACD,CAlED","sourcesContent":["export default (state = { selected: -1, previous: -1 }, action) => {\r\n  switch (action.type) {\r\n    case \"switchTab\":\r\n      \r\n      if (state.selected === state.previous && state.previous === -1) {\r\n        state = {\r\n          selected: action.payload,\r\n          previous: -1\r\n        };\r\n      } else {\r\n        state = {\r\n          selected: action.payload,\r\n          previous: state.selected\r\n        };\r\n      }\r\n\r\n      break;\r\n    case \"closeTabSelectedOne\":\r\n      var tempArray = action.payload.array1;\r\n      var lastClicked = action.payload.current;\r\n      \r\n\r\n      // if the tab being removed is the last\r\n      if (lastClicked === -1) {\r\n        if (tempArray.length === 1) {\r\n          state = {\r\n            previous: -1,\r\n            selected: -1\r\n          };\r\n        }\r\n        //no need to change the state\r\n      } else {\r\n        state = {\r\n          selected: lastClicked,\r\n          previous: state.selected\r\n        };\r\n      }\r\n\r\n      break;\r\n    case \"closeTabUnselectedOne\":\r\n      var tempArray = action.payload.array1;\r\n      var lastClicked = action.payload.current;\r\n    \r\n\r\n      //if the tab being removed is at right of the selected one than we don't have to change any states.\r\n      if (lastClicked >= state.selected) {\r\n        ///do nothing\r\n      } //if the tab being removed is at left of the selected one.\r\n      else {\r\n        state = {\r\n          selected: state.selected - 1,\r\n          previous: state.selected\r\n        };\r\n      }\r\n\r\n      break;\r\n       case \"logoutForUpperMenu\":\r\n           state = {\r\n          selected:-1,\r\n          previous: -1\r\n        }; \r\n           break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}