{"ast":null,"code":"import _classCallCheck from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\src\\\\components\\\\ImageSliderComp.js\";\nimport React from \"react\";\nimport $ from \"jquery\";\nimport { Carousel } from \"react-responsive-carousel\";\n\nvar ImageSliderComp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageSliderComp, _React$Component);\n\n  //storing all image divs reference\n  function ImageSliderComp(props) {\n    var _this;\n\n    _classCallCheck(this, ImageSliderComp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageSliderComp).call(this, props));\n    _this.inputRes = [];\n    _this.all_pics = [];\n    _this.image_index = 0;\n    _this.all_pics = _this.props.picData;\n    console.log(\"image constructor\");\n    return _this;\n  }\n\n  _createClass(ImageSliderComp, [{\n    key: \"scroll\",\n    value: function scroll(direction) {\n      var far = $(\".image-container\").width() / 2 * direction;\n      var pos = $(\".image-container\").scrollLeft() + far;\n      $(\".image-container\").animate({\n        scrollLeft: pos\n      }, 1000);\n    }\n  }, {\n    key: \"setRefs\",\n    value: function setRefs(arg, ind) {\n      console.log(\"added ref\" + this.inputRes.length + \" index \" + ind);\n      this.inputRes[ind] = arg;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.image_index = 0;\n      this.inputRes = [];\n      this.all_pics = this.props.picData; //main image slider urls\n\n      var selected = {\n        pics: []\n      };\n      this.all_pics.map(function (item) {\n        if (item.title === \"mainPageSlider\") {\n          selected = item;\n        }\n      });\n      console.log(\"rendering image\", selected);\n      return React.createElement(React.Fragment, null, React.createElement(Carousel, {\n        className: \"mainImageSlider\",\n        infiniteLoop: \"true\",\n        interval: \"2000\",\n        autoPlay: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, selected.pics.map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: item.url,\n          alt: \" \",\n          className: \"mainSliderrrr\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }));\n      })));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(\"uploading pic\" + this.inputRes, this.all_pics);\n\n      try {\n        for (var i = 0; i < this.inputRes.length; i++) {\n          console.log(\"inside loop\", this.all_pics[i].url);\n          this.inputRes[i].style.backgroundImage = \"url(\" + this.all_pics[i].url + \")\";\n        }\n      } catch (e) {\n        console.log(\"error occured\");\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return true;\n    }\n  }]);\n\n  return ImageSliderComp;\n}(React.Component);\n\nexport default ImageSliderComp;","map":{"version":3,"sources":["D:/towards Future/project1/React client/latestReact/src/components/ImageSliderComp.js"],"names":["React","$","Carousel","ImageSliderComp","props","inputRes","all_pics","image_index","picData","console","log","direction","far","width","pos","scrollLeft","animate","arg","ind","length","selected","pics","map","item","title","url","i","style","backgroundImage","e","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport $ from \"jquery\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\nclass ImageSliderComp extends React.Component {\r\n  //storing all image divs reference\r\n  inputRes = [];\r\n  all_pics = [];\r\n  image_index = 0;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.all_pics = this.props.picData;\r\n    console.log(\"image constructor\");\r\n  }\r\n\r\n  scroll(direction) {\r\n    let far = ($(\".image-container\").width() / 2) * direction;\r\n    let pos = $(\".image-container\").scrollLeft() + far;\r\n    $(\".image-container\").animate({ scrollLeft: pos }, 1000);\r\n  }\r\n  our;\r\n\r\n  setRefs(arg, ind) {\r\n    console.log(\"added ref\" + this.inputRes.length + \" index \" + ind);\r\n    this.inputRes[ind] = arg;\r\n  }\r\n\r\n  render() {\r\n    this.image_index = 0;\r\n    this.inputRes = [];\r\n    this.all_pics = this.props.picData;\r\n\r\n    //main image slider urls\r\n    var selected = { pics: [] };\r\n    this.all_pics.map(item => {\r\n      if (item.title === \"mainPageSlider\") {\r\n        selected = item;\r\n      }\r\n    });\r\n    console.log(\"rendering image\", selected);\r\n\r\n    return (\r\n      <>\r\n        <Carousel\r\n          className=\"mainImageSlider\"\r\n          infiniteLoop=\"true\"\r\n          interval=\"2000\"\r\n          autoPlay\r\n        >\r\n          {selected.pics.map(item => {\r\n            return (\r\n              <div>\r\n                <img src={item.url} alt=\" \" className=\"mainSliderrrr\" />\r\n              </div>\r\n            );\r\n          })}\r\n        </Carousel>\r\n      </>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"uploading pic\" + this.inputRes, this.all_pics);\r\n    try {\r\n      for (var i = 0; i < this.inputRes.length; i++) {\r\n        console.log(\"inside loop\", this.all_pics[i].url);\r\n        this.inputRes[i].style.backgroundImage =\r\n          \"url(\" + this.all_pics[i].url + \")\";\r\n      }\r\n    } catch (e) {\r\n      console.log(\"error occured\");\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default ImageSliderComp;\r\n"]},"metadata":{},"sourceType":"module"}