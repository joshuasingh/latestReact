{"ast":null,"code":"import _classCallCheck from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\src\\\\components\\\\VerticalMenu.js\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nvar VerticalMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VerticalMenu, _React$Component);\n\n  //storing all menu item reference\n  //this array is used to store only the needed info for vertical menu\n  function VerticalMenu(props) {\n    var _this;\n\n    _classCallCheck(this, VerticalMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VerticalMenu).call(this, props));\n    _this.inputRefs = [];\n    _this.index = 0;\n    _this.finalArray = [];\n    _this.testData = [{\n      value: \"joshua\"\n    }, {\n      value: \"joshua1\"\n    }, {\n      value: \"joshua2\"\n    }, {\n      value: \"joshua3\"\n    }, {\n      value: \"joshua4\"\n    }];\n    _this.testing1 = {\n      overflow: \"auto\"\n    };\n    _this.testing2 = {\n      \"margin-top\": \"4%\",\n      \"border-radius\": \"25px\",\n      height: \"12vh\",\n      \"background-Color\": \"#5CDB95\",\n      \"box-shadow\": \"2px 2px #7fdbff\"\n    };\n    var data = _this.props.data;\n    var val = _this.props.val;\n    console.log(\"in constr props data\", _this.props.data);\n\n    _this.findTheSelectedVal();\n\n    _this.state = {\n      data: _this.props.data,\n      currentSelected: _this.index,\n      previousSelected: -1,\n      first: 0\n    };\n    console.log(\"in recycler menu \", _this.props.data);\n    _this.newOne = React.createRef();\n    _this.putColor = _this.putColor.bind(_assertThisInitialized(_this));\n    _this.render = _this.render.bind(_assertThisInitialized(_this));\n    _this.removeBorder = _this.removeBorder.bind(_assertThisInitialized(_this));\n\n    _this.props.storingState(\"menu\", _assertThisInitialized(_this));\n\n    return _this;\n  } //find the index of selected index\n\n\n  _createClass(VerticalMenu, [{\n    key: \"findTheSelectedVal\",\n    value: function findTheSelectedVal() {\n      var _this2 = this;\n\n      this.props.data.map(function (item, inde) {\n        if (item.title === _this2.props.val) {\n          _this2.index = inde;\n        }\n      });\n    }\n  }, {\n    key: \"putColor\",\n    value: function putColor(valling) {\n      console.log(\"valling\" + valling);\n      console.log(\"in putcolor\" + this.state.currentSelected + this.state.previousSelected);\n      this.inputRefs[valling].id = \"rowTest_afterClick\"; //re-initializing the image info tab\n\n      this.props.clicked(this.state.currentSelected);\n      this.setState(function (prevState) {\n        return {\n          previousSelected: prevState.currentSelected,\n          currentSelected: valling\n        };\n      });\n      this.props.callTest();\n    } //Called to remove the border from the changing tab\n\n  }, {\n    key: \"removeBorder\",\n    value: function removeBorder() {}\n  }, {\n    key: \"setRefs\",\n    value: function setRefs(arg) {\n      this.inputRefs.push(arg);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"in component did mount of vertical menu\", this.state.data.length); //initializing for the images tab work\n\n      this.props.initialize(this.state.data.length);\n      console.log(\"expand image called from vertical meni \", this.state.data.length - 2); //initialize the expanded image view\n\n      this.props.initializeExpandImage(this.state.data.length - 2);\n      this.inputRefs[this.state.currentSelected].id = \"rowTest_afterClick\";\n      this.inputRefs[this.state.currentSelected].scrollIntoView();\n      this.setState({\n        data: this.props.data\n      });\n    } //Inline style for side tab\n\n  }, {\n    key: \"sideViewTab\",\n    //////////////////////\n    //item menu layout\n    value: function sideViewTab(val) {\n      return React.createElement(React.Fragment, null, React.createElement(\"h5\", {\n        className: \"sideBarText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, val));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(\"vertical menu render called\", this.props.data, this.state.currentSelected);\n      var values = this.state.data; //populating only relevent data in array\n\n      if (this.finalArray.length === 0) {\n        values.map(function (item, index) {\n          if (item.title !== \"mainPageSlider\" && item.title !== \"NavBarDetials\") {\n            _this3.finalArray[index] = item;\n          }\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        id: \"gridViewforAdmin\",\n        style: this.testing1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, this.finalArray.map(function (item, index) {\n        return React.createElement(\"div\", {\n          className: \"row\",\n          id: \"rowTest_beforeClick\",\n          ref: function ref(ree) {\n            return _this3.setRefs(ree);\n          },\n          onClick: function onClick(e) {\n            if (_this3.state.currentSelected !== index) {\n              _this3.props.changeTheDetail(item.title, item.value);\n\n              _this3.putColor(index);\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row-sm-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, _this3.sideViewTab(item.title)));\n      })));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      //remove color from previous state\n      if (this.state.previousSelected !== -1) this.inputRefs[this.state.previousSelected].id = \"rowTest_beforeClick\";\n    }\n  }]);\n\n  return VerticalMenu;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    clicked: function clicked(index) {\n      dispatch({\n        type: \"toggleImageWindow\",\n        payload: index\n      });\n    },\n    initialize: function initialize(count) {\n      dispatch({\n        type: \"initiateAllTabs\",\n        payload: count\n      });\n    },\n    callTest: function callTest() {\n      dispatch({\n        type: \"callTest\",\n        payload: \"\"\n      });\n    },\n    initializeExpandImage: function initializeExpandImage(count) {\n      dispatch({\n        type: \"ExpandedImageInitiate\",\n        payload: count\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VerticalMenu);","map":{"version":3,"sources":["D:/towards Future/project1/React client/latestReact/src/components/VerticalMenu.js"],"names":["React","useState","useEffect","connect","VerticalMenu","props","inputRefs","index","finalArray","testData","value","testing1","overflow","testing2","height","data","val","console","log","findTheSelectedVal","state","currentSelected","previousSelected","first","newOne","createRef","putColor","bind","render","removeBorder","storingState","map","item","inde","title","valling","id","clicked","setState","prevState","callTest","arg","push","length","initialize","initializeExpandImage","scrollIntoView","values","ree","setRefs","e","changeTheDetail","sideViewTab","Component","mapStateToProps","mapDispatchToProps","dispatch","type","payload","count"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,Y;;;;;AACJ;AAIA;AAWA,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AADiB,UAdnBC,SAcmB,GAdP,EAcO;AAAA,UAbnBC,KAamB,GAbX,CAaW;AAAA,UAVnBC,UAUmB,GAVN,EAUM;AAAA,UARnBC,QAQmB,GARR,CACT;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADS,EAET;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAFS,EAGT;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAHS,EAIT;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAJS,EAKT;AAAEA,MAAAA,KAAK,EAAE;AAAT,KALS,CAQQ;AAAA,UAwFnBC,QAxFmB,GAwFR;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAxFQ;AAAA,UA0FnBC,QA1FmB,GA0FR;AACT,oBAAc,IADL;AAET,uBAAiB,MAFR;AAGTC,MAAAA,MAAM,EAAE,MAHC;AAIT,0BAAoB,SAJX;AAKT,oBAAc;AALL,KA1FQ;AAGjB,QAAMC,IAAI,GAAG,MAAKV,KAAL,CAAWU,IAAxB;AACA,QAAMC,GAAG,GAAG,MAAKX,KAAL,CAAWW,GAAvB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,MAAKb,KAAL,CAAWU,IAA/C;;AACA,UAAKI,kBAAL;;AAEA,UAAKC,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE,MAAKV,KAAL,CAAWU,IADN;AAEXM,MAAAA,eAAe,EAAE,MAAKd,KAFX;AAGXe,MAAAA,gBAAgB,EAAE,CAAC,CAHR;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAOAN,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,MAAKb,KAAL,CAAWU,IAA5C;AAEA,UAAKS,MAAL,GAAcxB,KAAK,CAACyB,SAAN,EAAd;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,+BAAd;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,+BAApB;;AAEA,UAAKtB,KAAL,CAAWyB,YAAX,CAAwB,MAAxB;;AAvBiB;AAwBlB,G,CAED;;;;;yCACqB;AAAA;;AACnB,WAAKzB,KAAL,CAAWU,IAAX,CAAgBgB,GAAhB,CAAoB,UAACC,IAAD,EAAOC,IAAP,EAAgB;AAClC,YAAID,IAAI,CAACE,KAAL,KAAe,MAAI,CAAC7B,KAAL,CAAWW,GAA9B,EAAmC;AACjC,UAAA,MAAI,CAACT,KAAL,GAAa0B,IAAb;AACD;AACF,OAJD;AAKD;;;6BAEQE,O,EAAS;AAChBlB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYiB,OAAxB;AACAlB,MAAAA,OAAO,CAACC,GAAR,CACE,gBAAgB,KAAKE,KAAL,CAAWC,eAA3B,GAA6C,KAAKD,KAAL,CAAWE,gBAD1D;AAGA,WAAKhB,SAAL,CAAe6B,OAAf,EAAwBC,EAAxB,GAA6B,oBAA7B,CALgB,CAOhB;;AACA,WAAK/B,KAAL,CAAWgC,OAAX,CAAmB,KAAKjB,KAAL,CAAWC,eAA9B;AAEA,WAAKiB,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BjB,UAAAA,gBAAgB,EAAEiB,SAAS,CAAClB,eADF;AAE1BA,UAAAA,eAAe,EAAEc;AAFS,SAAL;AAAA,OAAvB;AAKA,WAAK9B,KAAL,CAAWmC,QAAX;AACD,K,CAED;;;;mCACe,CAAE;;;4BAETC,G,EAAK;AACX,WAAKnC,SAAL,CAAeoC,IAAf,CAAoBD,GAApB;AACD;;;wCAEmB;AAClBxB,MAAAA,OAAO,CAACC,GAAR,CACE,yCADF,EAEE,KAAKE,KAAL,CAAWL,IAAX,CAAgB4B,MAFlB,EADkB,CAMlB;;AACA,WAAKtC,KAAL,CAAWuC,UAAX,CAAsB,KAAKxB,KAAL,CAAWL,IAAX,CAAgB4B,MAAtC;AAEA1B,MAAAA,OAAO,CAACC,GAAR,CACE,yCADF,EAEE,KAAKE,KAAL,CAAWL,IAAX,CAAgB4B,MAAhB,GAAyB,CAF3B,EATkB,CAclB;;AACA,WAAKtC,KAAL,CAAWwC,qBAAX,CAAiC,KAAKzB,KAAL,CAAWL,IAAX,CAAgB4B,MAAhB,GAAyB,CAA1D;AAEA,WAAKrC,SAAL,CAAe,KAAKc,KAAL,CAAWC,eAA1B,EAA2Ce,EAA3C,GAAgD,oBAAhD;AAEA,WAAK9B,SAAL,CAAe,KAAKc,KAAL,CAAWC,eAA1B,EAA2CyB,cAA3C;AAEA,WAAKR,QAAL,CAAc;AACZvB,QAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWU;AADL,OAAd;AAGD,K,CAED;;;;AAYA;AAEA;gCACYC,G,EAAK;AACf,aACE,0CACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BA,GAA7B,CADF,CADF;AAKD;;;6BAEQ;AAAA;;AACPC,MAAAA,OAAO,CAACC,GAAR,CACE,6BADF,EAEE,KAAKb,KAAL,CAAWU,IAFb,EAGE,KAAKK,KAAL,CAAWC,eAHb;AAKA,UAAM0B,MAAM,GAAG,KAAK3B,KAAL,CAAWL,IAA1B,CANO,CAQP;;AACA,UAAI,KAAKP,UAAL,CAAgBmC,MAAhB,KAA2B,CAA/B,EAAkC;AAChCI,QAAAA,MAAM,CAAChB,GAAP,CAAW,UAACC,IAAD,EAAOzB,KAAP,EAAiB;AAC1B,cAAIyB,IAAI,CAACE,KAAL,KAAe,gBAAf,IAAmCF,IAAI,CAACE,KAAL,KAAe,eAAtD,EAAuE;AACrE,YAAA,MAAI,CAAC1B,UAAL,CAAgBD,KAAhB,IAAyByB,IAAzB;AACD;AACF,SAJD;AAKD;;AAED,aACE,0CACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,EAAE,EAAC,kBAFL;AAGE,QAAA,KAAK,EAAE,KAAKrB,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,KAAKH,UAAL,CAAgBuB,GAAhB,CAAoB,UAACC,IAAD,EAAOzB,KAAP,EAAiB;AACpC,eACE;AACE,UAAA,SAAS,EAAC,KADZ;AAEE,UAAA,EAAE,EAAC,qBAFL;AAGE,UAAA,GAAG,EAAE,aAAAyC,GAAG;AAAA,mBAAI,MAAI,CAACC,OAAL,CAAaD,GAAb,CAAJ;AAAA,WAHV;AAIE,UAAA,OAAO,EAAE,iBAAAE,CAAC,EAAI;AACZ,gBAAI,MAAI,CAAC9B,KAAL,CAAWC,eAAX,KAA+Bd,KAAnC,EAA0C;AACxC,cAAA,MAAI,CAACF,KAAL,CAAW8C,eAAX,CAA2BnB,IAAI,CAACE,KAAhC,EAAuCF,IAAI,CAACtB,KAA5C;;AACA,cAAA,MAAI,CAACgB,QAAL,CAAcnB,KAAd;AACD;AACF,WATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAWE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2B,MAAI,CAAC6C,WAAL,CAAiBpB,IAAI,CAACE,KAAtB,CAA3B,CAXF,CADF;AAeD,OAhBA,CALH,CADF,CADF;AA2BD;;;yCAEoB;AACnB;AACA,UAAI,KAAKd,KAAL,CAAWE,gBAAX,KAAgC,CAAC,CAArC,EACE,KAAKhB,SAAL,CAAe,KAAKc,KAAL,CAAWE,gBAA1B,EAA4Cc,EAA5C,GAAiD,qBAAjD;AACH;;;;EA/KwBpC,KAAK,CAACqD,S;;AAkLjC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAlC,KAAK,EAAI;AAC/B,SAAO,EAAP;AACD,CAFD;;AAIA,IAAMmC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLnB,IAAAA,OAAO,EAAE,iBAAA9B,KAAK,EAAI;AAChBiD,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEnD;AAFF,OAAD,CAAR;AAID,KANI;AAOLqC,IAAAA,UAAU,EAAE,oBAAAe,KAAK,EAAI;AACnBH,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,iBADC;AAEPC,QAAAA,OAAO,EAAEC;AAFF,OAAD,CAAR;AAID,KAZI;AAaLnB,IAAAA,QAAQ,EAAE,oBAAM;AACdgB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,UADC;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID,KAlBI;AAmBLb,IAAAA,qBAAqB,EAAE,+BAAAc,KAAK,EAAI;AAC9BH,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,uBADC;AAEPC,QAAAA,OAAO,EAAEC;AAFF,OAAD,CAAR;AAID;AAxBI,GAAP;AA0BD,CA3BD;;AA6BA,eAAexD,OAAO,CACpBmD,eADoB,EAEpBC,kBAFoB,CAAP,CAGbnD,YAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass VerticalMenu extends React.Component {\r\n  //storing all menu item reference\r\n  inputRefs = [];\r\n  index = 0;\r\n\r\n  //this array is used to store only the needed info for vertical menu\r\n  finalArray = [];\r\n\r\n  testData = [\r\n    { value: \"joshua\" },\r\n    { value: \"joshua1\" },\r\n    { value: \"joshua2\" },\r\n    { value: \"joshua3\" },\r\n    { value: \"joshua4\" }\r\n  ];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const data = this.props.data;\r\n    const val = this.props.val;\r\n\r\n    console.log(\"in constr props data\", this.props.data);\r\n    this.findTheSelectedVal();\r\n\r\n    this.state = {\r\n      data: this.props.data,\r\n      currentSelected: this.index,\r\n      previousSelected: -1,\r\n      first: 0\r\n    };\r\n\r\n    console.log(\"in recycler menu \", this.props.data);\r\n\r\n    this.newOne = React.createRef();\r\n    this.putColor = this.putColor.bind(this);\r\n    this.render = this.render.bind(this);\r\n    this.removeBorder = this.removeBorder.bind(this);\r\n\r\n    this.props.storingState(\"menu\", this);\r\n  }\r\n\r\n  //find the index of selected index\r\n  findTheSelectedVal() {\r\n    this.props.data.map((item, inde) => {\r\n      if (item.title === this.props.val) {\r\n        this.index = inde;\r\n      }\r\n    });\r\n  }\r\n\r\n  putColor(valling) {\r\n    console.log(\"valling\" + valling);\r\n    console.log(\r\n      \"in putcolor\" + this.state.currentSelected + this.state.previousSelected\r\n    );\r\n    this.inputRefs[valling].id = \"rowTest_afterClick\";\r\n\r\n    //re-initializing the image info tab\r\n    this.props.clicked(this.state.currentSelected);\r\n\r\n    this.setState(prevState => ({\r\n      previousSelected: prevState.currentSelected,\r\n      currentSelected: valling\r\n    }));\r\n\r\n    this.props.callTest();\r\n  }\r\n\r\n  //Called to remove the border from the changing tab\r\n  removeBorder() {}\r\n\r\n  setRefs(arg) {\r\n    this.inputRefs.push(arg);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\r\n      \"in component did mount of vertical menu\",\r\n      this.state.data.length\r\n    );\r\n\r\n    //initializing for the images tab work\r\n    this.props.initialize(this.state.data.length);\r\n\r\n    console.log(\r\n      \"expand image called from vertical meni \",\r\n      this.state.data.length - 2\r\n    );\r\n\r\n    //initialize the expanded image view\r\n    this.props.initializeExpandImage(this.state.data.length - 2);\r\n\r\n    this.inputRefs[this.state.currentSelected].id = \"rowTest_afterClick\";\r\n\r\n    this.inputRefs[this.state.currentSelected].scrollIntoView();\r\n\r\n    this.setState({\r\n      data: this.props.data\r\n    });\r\n  }\r\n\r\n  //Inline style for side tab\r\n\r\n  testing1 = { overflow: \"auto\" };\r\n\r\n  testing2 = {\r\n    \"margin-top\": \"4%\",\r\n    \"border-radius\": \"25px\",\r\n    height: \"12vh\",\r\n    \"background-Color\": \"#5CDB95\",\r\n    \"box-shadow\": \"2px 2px #7fdbff\"\r\n  };\r\n\r\n  //////////////////////\r\n\r\n  //item menu layout\r\n  sideViewTab(val) {\r\n    return (\r\n      <>\r\n        <h5 className=\"sideBarText\">{val}</h5>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    console.log(\r\n      \"vertical menu render called\",\r\n      this.props.data,\r\n      this.state.currentSelected\r\n    );\r\n    const values = this.state.data;\r\n\r\n    //populating only relevent data in array\r\n    if (this.finalArray.length === 0) {\r\n      values.map((item, index) => {\r\n        if (item.title !== \"mainPageSlider\" && item.title !== \"NavBarDetials\") {\r\n          this.finalArray[index] = item;\r\n        }\r\n      });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"container-fluid\"\r\n          id=\"gridViewforAdmin\"\r\n          style={this.testing1}\r\n        >\r\n          {this.finalArray.map((item, index) => {\r\n            return (\r\n              <div\r\n                className=\"row\"\r\n                id=\"rowTest_beforeClick\"\r\n                ref={ree => this.setRefs(ree)}\r\n                onClick={e => {\r\n                  if (this.state.currentSelected !== index) {\r\n                    this.props.changeTheDetail(item.title, item.value);\r\n                    this.putColor(index);\r\n                  }\r\n                }}\r\n              >\r\n                <div className=\"row-sm-4\">{this.sideViewTab(item.title)}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    //remove color from previous state\r\n    if (this.state.previousSelected !== -1)\r\n      this.inputRefs[this.state.previousSelected].id = \"rowTest_beforeClick\";\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    clicked: index => {\r\n      dispatch({\r\n        type: \"toggleImageWindow\",\r\n        payload: index\r\n      });\r\n    },\r\n    initialize: count => {\r\n      dispatch({\r\n        type: \"initiateAllTabs\",\r\n        payload: count\r\n      });\r\n    },\r\n    callTest: () => {\r\n      dispatch({\r\n        type: \"callTest\",\r\n        payload: \"\"\r\n      });\r\n    },\r\n    initializeExpandImage: count => {\r\n      dispatch({\r\n        type: \"ExpandedImageInitiate\",\r\n        payload: count\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VerticalMenu);\r\n"]},"metadata":{},"sourceType":"module"}