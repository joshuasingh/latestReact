{"ast":null,"code":"import axios from \"axios\";\n\nvar authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    user: {},\n    loggedIn: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"login\":\n      console.log(\"putting all the admin info in redux store\");\n      state = {\n        user: action.payload,\n        loggedIn: true\n      };\n      break;\n\n    case \"logOut\":\n      console.log(\"logut called\");\n      delete axios.defaults.headers.common[\"Authorization\"];\n      localStorage.removeItem(\"jwtToken\");\n      localStorage.removeItem(\"persistedArray\");\n      localStorage.removeItem(\"logInTime\");\n      state = {\n        user: {},\n        loggedIn: false\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default authReducer;","map":{"version":3,"sources":["D:/towards Future/project1/React client/latestReact/src/allReducer/authReducer.js"],"names":["axios","authReducer","state","user","loggedIn","action","type","console","log","payload","defaults","headers","common","localStorage","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAmD;AAAA,MAAlDC,KAAkD,uEAA1C;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE;AAAtB,GAA0C;AAAA,MAAXC,MAAW;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAN,MAAAA,KAAK,GAAG;AACNC,QAAAA,IAAI,EAAEE,MAAM,CAACI,OADP;AAGNL,QAAAA,QAAQ,EAAE;AAHJ,OAAR;AAKA;;AACF,SAAK,QAAL;AACEG,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,aAAOR,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACAC,MAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,gBAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AAEAZ,MAAAA,KAAK,GAAG;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,QAAQ,EAAE;AAAtB,OAAR;AACA;;AACF;AACE;AAnBJ;;AAqBA,SAAOF,KAAP;AACD,CAvBD;;AAyBA,eAAeD,WAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst authReducer = (state = { user: {}, loggedIn: false }, action) => {\r\n  switch (action.type) {\r\n    case \"login\":\r\n      console.log(\"putting all the admin info in redux store\");\r\n      state = {\r\n        user: action.payload,\r\n\r\n        loggedIn: true\r\n      };\r\n      break;\r\n    case \"logOut\":\r\n      console.log(\"logut called\");\r\n      delete axios.defaults.headers.common[\"Authorization\"];\r\n      localStorage.removeItem(\"jwtToken\");\r\n      localStorage.removeItem(\"persistedArray\");\r\n      localStorage.removeItem(\"logInTime\");\r\n\r\n      state = { user: {}, loggedIn: false };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default authReducer;\r\n"]},"metadata":{},"sourceType":"module"}