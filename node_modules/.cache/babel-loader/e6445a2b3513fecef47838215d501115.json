{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\src\\\\pages\\\\ElaborationPage.js\";\nimport React from \"react\";\nimport CommonNavBar from \"../components/CommonNavBar\";\nimport VerticalMenu from \"../components/VerticalMenu\";\nimport Details from \"../components/Details\";\nimport updateState from \"../components/UpdateFunction\";\nimport { connect } from \"react-redux\";\n\nvar ElaborationPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ElaborationPage, _React$Component);\n\n  function ElaborationPage(props) {\n    var _this;\n\n    _classCallCheck(this, ElaborationPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ElaborationPage).call(this, props));\n    _this.signed = false;\n    _this.fetchData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://nh65v.sse.codesandbox.io/allData\").then(function (response) {\n                return response.json();\n              }).then(function (res) {\n                console.log(\"received\");\n\n                _this.setState({\n                  data1: res\n                });\n              }).catch(function (err) {\n                console.log(\"in error\" + err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      data1: _this.props.mainData,\n      instanceRecordArray: [],\n      val: props.match.params.topic\n    };\n    _this.storingState = _this.storingState.bind(_assertThisInitialized(_this));\n    _this.changeTheDetail = _this.changeTheDetail.bind(_assertThisInitialized(_this)); //setting setup for incoming data\n\n    return _this;\n  } //fetch data from the server\n\n\n  _createClass(ElaborationPage, [{\n    key: \"storingState\",\n    value: function storingState(compo, inst) {\n      var temp = new Array();\n\n      if (compo === \"menu\") {\n        console.log(compo);\n        temp[0] = inst;\n      } else {\n        temp[1] = inst;\n        console.log(compo);\n      }\n\n      this.setState({\n        instanceRecordArray: temp\n      });\n    }\n  }, {\n    key: \"changeTheDetail\",\n    value: function changeTheDetail(title, value) {\n      this.state.instanceRecordArray[1].setState({\n        selected: value,\n        selectedItem: title\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.state.data1.length === 0) {\n        this.fetchData();\n        console.log(\"in component will mount\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var selectedVal = \"\";\n      var selectedItem = \"\";\n      window.scrollTo(0, 0);\n\n      if (this.state.data1.length === 0) {\n        return React.createElement(React.Fragment, null);\n      } else {\n        this.state.data1.map(function (item, index) {\n          if (item.title === _this2.state.val) {\n            selectedVal = item.value;\n            selectedItem = item.title;\n          }\n        });\n        return React.createElement(React.Fragment, null, React.createElement(\"meta\", {\n          name: \"viewport\",\n          content: \"width=device-width, initial-scale=1.0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          autoFocus: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"elabContainer\" // onClick={e => {\n          //   updateState(\"parent\");\n          // }}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navi_In_elab\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(CommonNavBar, {\n          signed: this.signed,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"vertical_menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(VerticalMenu, {\n          storingState: this.storingState,\n          data: this.state.data1,\n          val: this.state.val,\n          changeTheDetail: this.changeTheDetail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"Elab_details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(Details, {\n          selectedVal: selectedVal,\n          selectedItem: selectedItem,\n          storingState: this.storingState,\n          allData: this.state.data1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }))));\n      }\n    }\n  }]);\n\n  return ElaborationPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElaborationPage);","map":{"version":3,"sources":["D:/towards Future/project1/React client/latestReact/src/pages/ElaborationPage.js"],"names":["React","CommonNavBar","VerticalMenu","Details","updateState","connect","ElaborationPage","props","signed","fetchData","fetch","then","response","json","res","console","log","setState","data1","catch","err","state","mainData","instanceRecordArray","val","match","params","topic","storingState","bind","changeTheDetail","compo","inst","temp","Array","title","value","selected","selectedItem","length","selectedVal","window","scrollTo","map","item","index","Component","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CommonNavBar from \"../components/CommonNavBar\";\r\n\r\nimport VerticalMenu from \"../components/VerticalMenu\";\r\nimport Details from \"../components/Details\";\r\nimport updateState from \"../components/UpdateFunction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ElaborationPage extends React.Component {\r\n  signed = false;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data1: this.props.mainData,\r\n      instanceRecordArray: [],\r\n      val: props.match.params.topic\r\n    };\r\n\r\n    this.storingState = this.storingState.bind(this);\r\n    this.changeTheDetail = this.changeTheDetail.bind(this);\r\n\r\n    //setting setup for incoming data\r\n  }\r\n\r\n  //fetch data from the server\r\n  fetchData = async () => {\r\n    await fetch(`https://nh65v.sse.codesandbox.io/allData`)\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        console.log(\"received\");\r\n        this.setState({\r\n          data1: res\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"in error\" + err);\r\n      });\r\n  };\r\n\r\n  storingState(compo, inst) {\r\n    var temp = new Array();\r\n    if (compo === \"menu\") {\r\n      console.log(compo);\r\n      temp[0] = inst;\r\n    } else {\r\n      temp[1] = inst;\r\n      console.log(compo);\r\n    }\r\n\r\n    this.setState({\r\n      instanceRecordArray: temp\r\n    });\r\n  }\r\n\r\n  changeTheDetail(title, value) {\r\n    this.state.instanceRecordArray[1].setState({\r\n      selected: value,\r\n      selectedItem: title\r\n    });\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.state.data1.length === 0) {\r\n      this.fetchData();\r\n      console.log(\"in component will mount\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var selectedVal = \"\";\r\n    var selectedItem = \"\";\r\n\r\n    window.scrollTo(0, 0);\r\n\r\n    if (this.state.data1.length === 0) {\r\n      return <></>;\r\n    } else {\r\n      this.state.data1.map((item, index) => {\r\n        if (item.title === this.state.val) {\r\n          selectedVal = item.value;\r\n          selectedItem = item.title;\r\n        }\r\n      });\r\n\r\n      return (\r\n        <>\r\n          <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0\"\r\n          />\r\n          <div autoFocus />\r\n\r\n          <div\r\n            className=\"elabContainer\"\r\n            // onClick={e => {\r\n            //   updateState(\"parent\");\r\n            // }}\r\n          >\r\n            <div className=\"navi_In_elab\">\r\n              <CommonNavBar signed={this.signed} />\r\n            </div>\r\n\r\n            <div className=\"vertical_menu\">\r\n              <VerticalMenu\r\n                storingState={this.storingState}\r\n                data={this.state.data1}\r\n                val={this.state.val}\r\n                changeTheDetail={this.changeTheDetail}\r\n              />\r\n            </div>\r\n            {\r\n              <div className=\"Elab_details\">\r\n                <Details\r\n                  selectedVal={selectedVal}\r\n                  selectedItem={selectedItem}\r\n                  storingState={this.storingState}\r\n                  allData={this.state.data1}\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {};\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ElaborationPage);\r\n"]},"metadata":{},"sourceType":"module"}