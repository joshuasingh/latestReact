{"ast":null,"code":"import _classCallCheck from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\src\\\\components\\\\Details.js\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport ImageSlideElab from \"../components/ImageSlideElab\";\nimport { connect } from \"react-redux\";\n\nvar Details =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Details, _React$Component);\n\n  //capiotn of the selected image\n  function Details(props) {\n    var _this;\n\n    _classCallCheck(this, Details);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Details).call(this, props));\n    _this.CaptionRef = null;\n    _this.data = _this.props.allData;\n    _this.picObject = [];\n    _this.state = {\n      selected: _this.props.selectedVal,\n      selectedItem: _this.props.selectedItem,\n      itemStatus: _this.fillArray(),\n      picCaption: null\n    };\n\n    _this.props.storingState(\"notMenu\", _assertThisInitialized(_this));\n\n    _this.setImage = _this.setImage.bind(_assertThisInitialized(_this));\n    _this.closeImage = _this.closeImage.bind(_assertThisInitialized(_this));\n    _this.changePicture = _this.changePicture.bind(_assertThisInitialized(_this));\n    _this.checkStatus = _this.checkStatus.bind(_assertThisInitialized(_this));\n    _this.detailElab = _this.detailElab.bind(_assertThisInitialized(_this));\n    var selectedVal = _this.state.selected;\n    var selectedItem = _this.state.selectedItem;\n    return _this;\n  }\n\n  _createClass(Details, [{\n    key: \"fillArray\",\n    value: function fillArray() {\n      var arr = Array.apply(null, Array(this.props.allData.length));\n      return arr.map(function (x, i) {\n        return 0;\n      });\n    }\n  }, {\n    key: \"setImage\",\n    value: function setImage(imgUrl, ind) {\n      console.log(\"in set image\", imgUrl, \"clicked index\", ind, \"and this position\", this.position, \"item status\", this.state.itemStatus); //keeping a temporary array\n\n      var temp = this.state.itemStatus;\n      temp[this.position] = 1; //changing the status of clicked event\n\n      this.setState({\n        itemStatus: temp,\n        picCaption: imgUrl.caption\n      });\n      var re = this.imageRef;\n      re.id = \"EnlargeImageShow\"; //re.style.transition = \"all 2s\";\n\n      this.textRef.id = \"Text_Details_Transform-after\"; // this.textRef.style.transition = \"all 2s\";\n\n      this.showingImg.style.backgroundImage = \"url(\" + imgUrl.url + \")\"; //setting the caption\n\n      this.CaptionRef.value = \"sdfsdfsdf\";\n    }\n  }, {\n    key: \"closeImage\",\n    value: function closeImage() {\n      //keeping a temporary array\n      var temp = this.state.itemStatus;\n      var re = this.imageRef;\n      re.id = \"EnlargeImage\"; // re.style.transition = \"all 2s\";\n\n      this.textRef.id = \"Text_Details_Transform_before\"; //remove border from the selected image\n\n      this.props.clicked(this.position);\n      this.props.clickToReset(this.position);\n    }\n  }, {\n    key: \"changePicture\",\n    value: function changePicture() {\n      this.imageRef.style.backgroundImage = 'url(\"https://picsum.photos/200\")';\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"in component did mount of details\");\n    } //all details about clicked point\n\n  }, {\n    key: \"detailElab\",\n    value: function detailElab(val) {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"Text_Details\",\n        id: \"Text_Details_Transform_before\",\n        ref: function ref(e) {\n          _this2.textRef = e;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"elabHeading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, val.title), React.createElement(\"div\", {\n        className: \"elabText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, val.value)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      //getting the position of selected item from vertical menu\n      this.data.map(function (item, index) {\n        if (item.title === _this3.state.selectedItem) {\n          _this3.picObject = item.pics;\n          _this3.position = index;\n        }\n      });\n      console.log(\"giving item Status in details position\", this.props.imagesTabStatus.allTabRef);\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"Alldetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.detailElab(this.data[this.position]), React.createElement(\"div\", {\n        className: \"EnlargedImageClass\",\n        id: \"EnlargeImage\",\n        ref: function ref(e) {\n          _this3.imageRef = e;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"closing_icon\",\n        onClick: function onClick() {\n          _this3.closeImage();\n        },\n        title: \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"---\"), React.createElement(\"div\", {\n        className: \"ImageHere\",\n        ref: function ref(e) {\n          _this3.showingImg = e;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"caption\",\n        ref: function ref(ree) {\n          _this3.CaptionRef = ree;\n        },\n        value: \"sdfsdfdsf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.props.imagesTabStatus.allTabRef !== null ? this.props.imagesTabStatus.allTabRef[this.position].currentCaption : \"\")), React.createElement(\"div\", {\n        className: \"Image_Info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(ImageSlideElab, {\n        setImage: this.setImage,\n        changePicture: this.changePicture,\n        picData: this.picObject,\n        position: this.position,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))));\n    } //check if the expanded view for images is open or not\n\n  }, {\n    key: \"checkStatus\",\n    value: function checkStatus() {\n      var itemDetails = this.props.imagesTabStatus.allTabRef[this.position];\n\n      if (itemDetails.status !== -1) {\n        var re = this.imageRef;\n        re.id = \"EnlargeImageShow\"; //re.style.transition = \"all 2s\";\n\n        this.textRef.id = \"Text_Details_Transform-after\"; //set the background image\n\n        this.showingImg.style.backgroundImage = \"url(\" + itemDetails.currentUrl + \")\";\n      } else {\n        var re = this.imageRef;\n        re.id = \"EnlargeImage\"; // re.style.transition = \"all 2s\";\n\n        this.textRef.id = \"Text_Details_Transform_before\";\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(\"in component did update in image elab \", this.props.imagesTabStatus.allTabRef[this.position]);\n      this.checkStatus();\n    }\n  }]);\n\n  return Details;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    updateClick: state.ImageSelection,\n    imagesTabStatus: state.ShowExpandedImage\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    clicked: function clicked(val) {\n      dispatch({\n        type: \"setReset\",\n        payload: val\n      });\n    },\n    clickToReset: function clickToReset(index) {\n      dispatch({\n        type: \"resetEnlargedImage\",\n        payload: {\n          index: index\n        }\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Details);","map":{"version":3,"sources":["D:/towards Future/project1/React client/latestReact/src/components/Details.js"],"names":["React","useState","useEffect","ImageSlideElab","connect","Details","props","CaptionRef","data","allData","picObject","state","selected","selectedVal","selectedItem","itemStatus","fillArray","picCaption","storingState","setImage","bind","closeImage","changePicture","checkStatus","detailElab","arr","Array","apply","length","map","x","i","imgUrl","ind","console","log","position","temp","setState","caption","re","imageRef","id","textRef","showingImg","style","backgroundImage","url","value","clicked","clickToReset","val","e","title","item","index","pics","imagesTabStatus","allTabRef","ree","currentCaption","itemDetails","status","currentUrl","Component","mapStateToProps","updateClick","ImageSelection","ShowExpandedImage","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ImageSlideElab from \"../components/ImageSlideElab\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Details extends React.Component {\r\n  position;\r\n\r\n  //capiotn of the selected image\r\n\r\n  CaptionRef = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: this.props.selectedVal,\r\n      selectedItem: this.props.selectedItem,\r\n      itemStatus: this.fillArray(),\r\n      picCaption: null\r\n    };\r\n\r\n    this.props.storingState(\"notMenu\", this);\r\n    this.setImage = this.setImage.bind(this);\r\n    this.closeImage = this.closeImage.bind(this);\r\n    this.changePicture = this.changePicture.bind(this);\r\n    this.checkStatus = this.checkStatus.bind(this);\r\n    this.detailElab = this.detailElab.bind(this);\r\n\r\n    const selectedVal = this.state.selected;\r\n    const selectedItem = this.state.selectedItem;\r\n  }\r\n\r\n  fillArray() {\r\n    var arr = Array.apply(null, Array(this.props.allData.length));\r\n    return arr.map(function(x, i) {\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  data = this.props.allData;\r\n\r\n  setImage(imgUrl, ind) {\r\n    console.log(\r\n      \"in set image\",\r\n      imgUrl,\r\n      \"clicked index\",\r\n      ind,\r\n      \"and this position\",\r\n      this.position,\r\n      \"item status\",\r\n      this.state.itemStatus\r\n    );\r\n\r\n    //keeping a temporary array\r\n    var temp = this.state.itemStatus;\r\n    temp[this.position] = 1;\r\n\r\n    //changing the status of clicked event\r\n    this.setState({\r\n      itemStatus: temp,\r\n      picCaption: imgUrl.caption\r\n    });\r\n    var re = this.imageRef;\r\n\r\n    re.id = \"EnlargeImageShow\";\r\n    //re.style.transition = \"all 2s\";\r\n    this.textRef.id = \"Text_Details_Transform-after\";\r\n\r\n    // this.textRef.style.transition = \"all 2s\";\r\n    this.showingImg.style.backgroundImage = \"url(\" + imgUrl.url + \")\";\r\n\r\n    //setting the caption\r\n    this.CaptionRef.value = \"sdfsdfsdf\";\r\n  }\r\n\r\n  closeImage() {\r\n    //keeping a temporary array\r\n    var temp = this.state.itemStatus;\r\n\r\n    var re = this.imageRef;\r\n    re.id = \"EnlargeImage\";\r\n    // re.style.transition = \"all 2s\";\r\n    this.textRef.id = \"Text_Details_Transform_before\";\r\n\r\n    //remove border from the selected image\r\n    this.props.clicked(this.position);\r\n\r\n    this.props.clickToReset(this.position);\r\n  }\r\n\r\n  changePicture() {\r\n    this.imageRef.style.backgroundImage = 'url(\"https://picsum.photos/200\")';\r\n  }\r\n\r\n  picObject = [];\r\n  componentDidMount() {\r\n    console.log(\"in component did mount of details\");\r\n  }\r\n\r\n  //all details about clicked point\r\n  detailElab(val) {\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"Text_Details\"\r\n          id=\"Text_Details_Transform_before\"\r\n          ref={e => {\r\n            this.textRef = e;\r\n          }}\r\n        >\r\n          <div className=\"elabHeading\">{val.title}</div>\r\n          <div className=\"elabText\">{val.value}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    //getting the position of selected item from vertical menu\r\n    this.data.map((item, index) => {\r\n      if (item.title === this.state.selectedItem) {\r\n        this.picObject = item.pics;\r\n        this.position = index;\r\n      }\r\n    });\r\n\r\n    console.log(\r\n      \"giving item Status in details position\",\r\n      this.props.imagesTabStatus.allTabRef\r\n    );\r\n    return (\r\n      <>\r\n        <div className=\"Alldetails\">\r\n          {this.detailElab(this.data[this.position])}\r\n          <div\r\n            className=\"EnlargedImageClass\"\r\n            id=\"EnlargeImage\"\r\n            ref={e => {\r\n              this.imageRef = e;\r\n            }}\r\n          >\r\n            <div\r\n              className=\"closing_icon\"\r\n              onClick={() => {\r\n                this.closeImage();\r\n              }}\r\n              title=\"close\"\r\n            >\r\n              ---\r\n            </div>\r\n\r\n            <div\r\n              className=\"ImageHere\"\r\n              ref={e => {\r\n                this.showingImg = e;\r\n              }}\r\n            />\r\n            <div\r\n              id=\"caption\"\r\n              ref={ree => {\r\n                this.CaptionRef = ree;\r\n              }}\r\n              value=\"sdfsdfdsf\"\r\n            >\r\n              {this.props.imagesTabStatus.allTabRef !== null\r\n                ? this.props.imagesTabStatus.allTabRef[this.position]\r\n                    .currentCaption\r\n                : \"\"}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Image_Info\">\r\n            <ImageSlideElab\r\n              setImage={this.setImage}\r\n              changePicture={this.changePicture}\r\n              picData={this.picObject}\r\n              position={this.position}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  //check if the expanded view for images is open or not\r\n  checkStatus() {\r\n    var itemDetails = this.props.imagesTabStatus.allTabRef[this.position];\r\n    if (itemDetails.status !== -1) {\r\n      var re = this.imageRef;\r\n      re.id = \"EnlargeImageShow\";\r\n      //re.style.transition = \"all 2s\";\r\n      this.textRef.id = \"Text_Details_Transform-after\";\r\n\r\n      //set the background image\r\n      this.showingImg.style.backgroundImage =\r\n        \"url(\" + itemDetails.currentUrl + \")\";\r\n    } else {\r\n      var re = this.imageRef;\r\n      re.id = \"EnlargeImage\";\r\n      // re.style.transition = \"all 2s\";\r\n      this.textRef.id = \"Text_Details_Transform_before\";\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\r\n      \"in component did update in image elab \",\r\n      this.props.imagesTabStatus.allTabRef[this.position]\r\n    );\r\n    this.checkStatus();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    updateClick: state.ImageSelection,\r\n    imagesTabStatus: state.ShowExpandedImage\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    clicked: val => {\r\n      dispatch({\r\n        type: \"setReset\",\r\n        payload: val\r\n      });\r\n    },\r\n    clickToReset: index => {\r\n      dispatch({\r\n        type: \"resetEnlargedImage\",\r\n        payload: { index }\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Details);\r\n"]},"metadata":{},"sourceType":"module"}