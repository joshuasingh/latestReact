{"ast":null,"code":"var _jsxFileName = \"D:\\\\towards Future\\\\project1\\\\React client\\\\latestReact\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Homepage from \"../src/pages/Homepage\";\nimport Notfound from \"../src/pages/Notfound\";\nimport \"./styles.css\";\nimport ElaborationPage from \"./pages/ElaborationPage\";\nimport AdminPage from \"./pages/AdminPage\";\nimport TestFirstPage from \"./pages/TestFirstPage\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport AdminLogin from \"./pages/AdminLogin\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport App from \"./App\";\nimport combineReducer1 from \"./rootReducer\";\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport { PersistGate } from 'redux-persist/lib/integration/react';\n\nvar myLogger = function myLogger(store) {\n  return function (next) {\n    return function (action) {\n      console.log(\"logged action:\", action);\n      next(action);\n    };\n  };\n}; // const store = createStore(combineReducer1, {});\n\n\nvar persistConfig = {\n  key: 'root',\n  storage: storage\n};\nvar persistedReducer = persistReducer(persistConfig, combineReducer1);\nvar store = createStore(persistedReducer, {});\nvar persistor = persistStore(store);\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(PersistGate, {\n  persistor: persistor,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}))), rootElement);","map":{"version":3,"sources":["D:/towards Future/project1/React client/latestReact/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Router","Route","Switch","Homepage","Notfound","ElaborationPage","AdminPage","TestFirstPage","AdminLogin","Provider","createStore","applyMiddleware","combineReducers","App","combineReducer1","storage","persistReducer","persistStore","PersistGate","myLogger","store","next","action","console","log","persistConfig","key","persistedReducer","persistor","rootElement","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,cAAP;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAO,uDAAP;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,eAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAAQC,cAAR,EAAuBC,YAAvB,QAA0C,eAA1C;AACA,SAAQC,WAAR,QAA0B,qCAA1B;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,MAA9B;AACAD,MAAAA,IAAI,CAACC,MAAD,CAAJ;AACD,KAH6B;AAAA,GAAR;AAAA,CAAtB,C,CAKA;;;AAEA,IAAMG,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBX,EAAAA,OAAO,EAAEA;AAFS,CAAtB;AAIA,IAAMY,gBAAgB,GAAGX,cAAc,CAACS,aAAD,EAAgBX,eAAhB,CAAvC;AAEA,IAAMM,KAAK,GAAGV,WAAW,CAACiB,gBAAD,EAAmB,EAAnB,CAAzB;AAEA,IAAMC,SAAS,GAACX,YAAY,CAACG,KAAD,CAA5B;AAIA,IAAMS,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAjC,QAAQ,CAACkC,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,WAAD;AAAa,EAAA,SAAS,EAAEQ,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADD,CADF,EAMEC,WANF","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Homepage from \"../src/pages/Homepage\";\r\nimport Notfound from \"../src/pages/Notfound\";\r\nimport \"./styles.css\";\r\nimport ElaborationPage from \"./pages/ElaborationPage\";\r\nimport AdminPage from \"./pages/AdminPage\";\r\nimport TestFirstPage from \"./pages/TestFirstPage\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport AdminLogin from \"./pages/AdminLogin\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport App from \"./App\";\r\nimport combineReducer1 from \"./rootReducer\";\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {persistReducer,persistStore} from \"redux-persist\"\r\nimport {PersistGate} from 'redux-persist/lib/integration/react';\r\n\r\n\r\n\r\n\r\nconst myLogger = store => next => action => {\r\n  console.log(\"logged action:\", action);\r\n  next(action);\r\n};\r\n\r\n// const store = createStore(combineReducer1, {});\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, combineReducer1);\r\n\r\nconst store = createStore(persistedReducer, {});\r\n\r\nconst persistor=persistStore(store)\r\n\r\n\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n   <PersistGate persistor={persistor}>\r\n    <App />\r\n   </PersistGate> \r\n  </Provider>,\r\n  rootElement\r\n);\r\n"]},"metadata":{},"sourceType":"module"}